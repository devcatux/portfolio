import { useState } from "react";import { ArrowLeft, ArrowRight } from "lucide-react";interface SliderCarouselProps {  images: string[];  title?: string;}export const SliderCarousel = ({ images, title }: SliderCarouselProps) => {  const [currentIndex, setCurrentIndex] = useState(0);  const [isExpanding, setIsExpanding] = useState(false);    const nextSlide = () => {    setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);  };    const prevSlide = () => {    setCurrentIndex((prevIndex) => (prevIndex - 1 + images.length) % images.length);  };    const toggleExpand = () => {    setIsExpanding(!isExpanding);  };    return (    <div className="relative max-w-3xl mx-auto">      {title && (        <h3 className="text-xl font-semibold mb-4 text-portfolio-blue">{title}</h3>      )}      <div         className={`relative overflow-hidden transition-all duration-500 ease-in-out cursor-pointer rounded-[4px] bg-gray-800 ${          isExpanding ? "h-[500px]" : "h-[300px]"        }`}        onClick={toggleExpand}      >        <div           className="absolute inset-0 flex transition-transform duration-500 ease-in-out"          style={{ transform: `translateX(-${currentIndex * 100}%)` }}        >          {images.map((src, index) => (            <div key={index} className="w-full h-full flex-shrink-0 relative">              <img                src={src}                alt={`Slide ${index + 1}`}                className="w-full h-full object-cover"              />                            {/* Expand indicator */}              <div className="absolute bottom-4 right-4 bg-black/70 text-white text-xs px-3 py-1 rounded-full backdrop-blur-sm">                {isExpanding ? "Click to collapse" : "Click to expand"}              </div>            </div>          ))}        </div>                {/* Navigation Dots */}        <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2">          {images.map((_, index) => (            <button              key={index}              className={`w-2 h-2 rounded-full transition-all ${                index === currentIndex ? "bg-white scale-125" : "bg-white/50"              }`}              onClick={(e) => {                e.stopPropagation();                setCurrentIndex(index);              }}            />          ))}        </div>      </div>            {/* Navigation Arrows */}      <button        className="absolute left-2 top-1/2 -translate-y-1/2 w-10 h-10 rounded-full bg-white/30 backdrop-blur-sm flex items-center justify-center text-white transition-all hover:bg-white/50"        onClick={(e) => {          e.stopPropagation();          prevSlide();        }}      >        <ArrowLeft size={20} />      </button>            <button        className="absolute right-2 top-1/2 -translate-y-1/2 w-10 h-10 rounded-full bg-white/30 backdrop-blur-sm flex items-center justify-center text-white transition-all hover:bg-white/50"        onClick={(e) => {          e.stopPropagation();          nextSlide();        }}      >        <ArrowRight size={20} />      </button>    </div>  );}; 